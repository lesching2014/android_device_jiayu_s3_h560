diff --git a/device/jiayu/s3_h560/scripts/e2fsck.mk b/device/jiayu/s3_h560/scripts/e2fsck.mk
new file mode 100644
index 0000000..815a7e0
--- /dev/null
+++ b/device/jiayu/s3_h560/scripts/e2fsck.mk
@@ -0,0 +1,57 @@
+LOCAL_PATH := external/e2fsprogs/e2fsck
+
+e2fsck_src_files := \
+	e2fsck.c \
+	super.c \
+	pass1.c \
+	pass1b.c \
+	pass2.c \
+	pass3.c \
+	pass4.c \
+	pass5.c \
+	logfile.c \
+	journal.c \
+	recovery.c \
+	revoke.c \
+	badblocks.c \
+	util.c \
+	unix.c \
+	dirinfo.c \
+	dx_dirinfo.c \
+	ehandler.c \
+	problem.c \
+	message.c \
+	ea_refcount.c \
+	quota.c \
+	rehash.c \
+	region.c \
+	sigcatcher.c \
+	readahead.c \
+	extents.c
+
+e2fsck_c_includes := external/e2fsprogs/lib
+
+e2fsck_cflags := -O2 -g -W -Wall
+
+e2fsck_shared_libraries := \
+	libext2fs \
+	libext2_blkid \
+	libext2_uuid \
+	libext2_quota \
+	libext2_com_err \
+	libext2_e2p
+
+e2fsck_system_shared_libraries := libc
+
+include $(CLEAR_VARS)
+
+LOCAL_SRC_FILES := $(e2fsck_src_files)
+LOCAL_C_INCLUDES := $(e2fscks_c_includes)
+LOCAL_CFLAGS := $(e2fsck_cflags)
+LOCAL_STATIC_LIBRARIES := $(e2fsck_shared_libraries)
+LOCAL_STATIC_LIBRARIES += $(e2fsck_system_shared_libraries)
+LOCAL_MODULE := e2fsck_mt6752
+LOCAL_MODULE_TAGS := optional
+LOCAL_MODULE_PATH := $(PRODUCT_OUT)/install/bin
+LOCAL_FORCE_STATIC_EXECUTABLE := true
+include $(BUILD_EXECUTABLE)
\ No newline at end of file
diff --git a/device/jiayu/s3_h560/scripts/gptfdisk.mk b/device/jiayu/s3_h560/scripts/gptfdisk.mk
new file mode 100644
index 0000000..cfb7ac1
--- /dev/null
+++ b/device/jiayu/s3_h560/scripts/gptfdisk.mk
@@ -0,0 +1,45 @@
+LOCAL_PATH := external/gptfdisk
+
+sgdisk_src_files := \
+    sgdisk.cc \
+    gptcl.cc \
+    crc32.cc \
+    support.cc \
+    guid.cc \
+    gptpart.cc \
+    mbrpart.cc \
+    basicmbr.cc \
+    mbr.cc \
+    gpt.cc \
+    bsd.cc \
+    parttypes.cc \
+    attributes.cc \
+    diskio.cc \
+    diskio-unix.cc \
+    android_popt.cc \
+
+sgdisk_c_includes := external/e2fsprogs/lib
+
+sgdisk_shared_libraries := \
+        libext2_uuid
+
+sgdisk_system_shared_libraries := libc
+
+sgdisk_cflags := -O2 -g -W -Wall
+
+include $(CLEAR_VARS)
+
+LOCAL_CPP_EXTENSION := .cc
+
+LOCAL_C_INCLUDES := $(LOCAL_PATH) $(sgdisk_c_includes)
+LOCAL_SRC_FILES := $(sgdisk_src_files)
+LOCAL_CFLAGS := $(sgdisk_cflags)
+
+LOCAL_STATIC_LIBRARIES := $(sgdisk_shared_libraries)
+LOCAL_STATIC_LIBRARIES += $(sgdisk_system_shared_libraries)
+
+LOCAL_MODULE := sgdisk_mt6752
+LOCAL_MODULE_TAGS := optional
+LOCAL_MODULE_PATH := $(PRODUCT_OUT)/install/bin
+LOCAL_FORCE_STATIC_EXECUTABLE := true
+include $(BUILD_EXECUTABLE)
\ No newline at end of file
diff --git a/device/jiayu/s3_h560/scripts/mke2fs.mk b/device/jiayu/s3_h560/scripts/mke2fs.mk
new file mode 100644
index 0000000..cd5ced1
--- /dev/null
+++ b/device/jiayu/s3_h560/scripts/mke2fs.mk
@@ -0,0 +1,40 @@
+LOCAL_PATH := external/e2fsprogs/misc
+
+#########################################################################
+# Build statically linked mke2fs for recovery
+mke2fs_src_files := \
+       mke2fs.c \
+       mk_hugefiles.c \
+       default_profile.c \
+       create_inode.c \
+
+mke2fs_c_includes := \
+       external/e2fsprogs/e2fsck
+
+mke2fs_cflags := -W -Wall -Wno-macro-redefined
+
+mke2fs_static_libraries := \
+       libext2_blkid \
+       libext2_uuid \
+       libext2_quota \
+       libext2_com_err \
+       libext2_e2p \
+       libsparse \
+       libz \
+
+mke2fs_whole_static_libraries := \
+       libbase \
+       libext2fs \
+
+include $(CLEAR_VARS)
+
+LOCAL_SRC_FILES := $(mke2fs_src_files)
+LOCAL_C_INCLUDES := $(mke2fs_c_includes)
+LOCAL_CFLAGS := $(mke2fs_cflags)
+LOCAL_WHOLE_STATIC_LIBRARIES := $(mke2fs_whole_static_libraries)
+LOCAL_STATIC_LIBRARIES := $(mke2fs_static_libraries)
+LOCAL_MODULE := mke2fs_mt6752
+LOCAL_MODULE_PATH := $(PRODUCT_OUT)/install/bin
+LOCAL_FORCE_STATIC_EXECUTABLE := true
+
+include $(BUILD_EXECUTABLE)
\ No newline at end of file
diff --git a/device/jiayu/s3_h560/scripts/releasetools.py b/device/jiayu/s3_h560/scripts/releasetools.py
new file mode 100644
index 0000000..21c4a46
--- /dev/null
+++ b/device/jiayu/s3_h560/scripts/releasetools.py
@@ -0,0 +1,25 @@
+def FullOTA_InstallBegin(self):
+  CreateVendorPartition(self)
+  return
+
+def IncrementalOTA_InstallBegin(self):
+  CreateVendorPartition(self)
+  return
+
+def CreateVendorPartition(info):
+  info.script.AppendExtra('package_extract_file("install/bin/sgdisk_mt6752", "/tmp/sgdisk");');
+  info.script.AppendExtra('package_extract_file("install/bin/toybox_mt6752", "/tmp/toybox");');
+  info.script.AppendExtra('package_extract_file("install/bin/e2fsck_mt6752", "/tmp/e2fsck");');
+  info.script.AppendExtra('package_extract_file("install/bin/mke2fs_mt6752", "/tmp/mke2fs");');
+  info.script.AppendExtra('package_extract_file("install/bin/resize2fs_static", "/tmp/resize2fs");');
+  info.script.AppendExtra('package_extract_file("install/bin/vendor.sh", "/tmp/vendor.sh");');
+  info.script.AppendExtra('set_metadata("/tmp/sgdisk", "uid", 0, "gid", 0, "mode", 0755);');
+  info.script.AppendExtra('set_metadata("/tmp/toybox", "uid", 0, "gid", 0, "mode", 0755);');
+  info.script.AppendExtra('set_metadata("/tmp/e2fsck", "uid", 0, "gid", 0, "mode", 0755);');
+  info.script.AppendExtra('set_metadata("/tmp/mke2fs", "uid", 0, "gid", 0, "mode", 0755);');
+  info.script.AppendExtra('set_metadata("/tmp/resize2fs", "uid", 0, "gid", 0, "mode", 0755);');
+  info.script.AppendExtra('set_metadata("/tmp/vendor.sh", "uid", 0, "gid", 0, "mode", 0755);');
+  info.script.AppendExtra('ui_print("Checking for vendor partition...");');
+  info.script.AppendExtra('if run_program("/tmp/vendor.sh") != 0 then');
+  info.script.AppendExtra('abort("Create /vendor partition failed.");');
+  info.script.AppendExtra('endif;');
\ No newline at end of file
diff --git a/device/jiayu/s3_h560/scripts/toybox.mk b/device/jiayu/s3_h560/scripts/toybox.mk
new file mode 100644
index 0000000..00050e5
--- /dev/null
+++ b/device/jiayu/s3_h560/scripts/toybox.mk
@@ -0,0 +1,265 @@
+#
+# Copyright (C) 2014 The Android Open Source Project
+#
+# Licensed under the Apache License, Version 2.0 (the "License");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#      http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+#
+
+LOCAL_PATH := external/toybox
+
+#
+# To update:
+#
+
+#  git remote add toybox https://github.com/landley/toybox.git
+#  git fetch toybox
+#  git merge toybox/master
+#  mm -j32
+#  # (Make any necessary Android.mk changes and test the new toybox.)
+#  repo upload .
+#  git push aosp HEAD:refs/for/master  # Push to gerrit for review.
+#  git push aosp HEAD:master  # Push directly, avoiding gerrit.
+#
+#  # Now commit any necessary Android.mk changes like normal:
+#  repo start post-sync .
+#  git commit -a
+
+
+#
+# To add a toy:
+#
+
+#  Edit .config to enable the toy you want to add.
+#  make clean && make  # Regenerate the generated files.
+#  # Edit LOCAL_SRC_FILES below to add the toy.
+#  # If you just want to use it as "toybox x" rather than "x", you can stop now.
+#  # If you want this toy to have a symbolic link in /system/bin, add the toy to ALL_TOOLS.
+
+common_SRC_FILES := \
+    lib/device/jiayu/s3_h560/scripts/args.c \
+    lib/device/jiayu/s3_h560/scripts/dirtree.c \
+    lib/device/jiayu/s3_h560/scripts/getmountlist.c \
+    lib/device/jiayu/s3_h560/scripts/help.c \
+    lib/device/jiayu/s3_h560/scripts/interestingtimes.c \
+    lib/device/jiayu/s3_h560/scripts/lib.c \
+    lib/device/jiayu/s3_h560/scripts/linestack.c \
+    lib/device/jiayu/s3_h560/scripts/llist.c \
+    lib/device/jiayu/s3_h560/scripts/net.c \
+    lib/device/jiayu/s3_h560/scripts/portability.c \
+    lib/device/jiayu/s3_h560/scripts/xwrap.c \
+    main.c \
+    toys/android/getenforce.c \
+    toys/android/getprop.c \
+    toys/android/load_policy.c \
+    toys/android/log.c \
+    toys/android/restorecon.c \
+    toys/android/runcon.c \
+    toys/android/sendevent.c \
+    toys/android/setenforce.c \
+    toys/android/setprop.c \
+    toys/android/start.c \
+    toys/lsb/device/jiayu/s3_h560/scripts/dmesg.c \
+    toys/lsb/device/jiayu/s3_h560/scripts/hostname.c \
+    toys/lsb/device/jiayu/s3_h560/scripts/killall.c \
+    toys/lsb/device/jiayu/s3_h560/scripts/md5sum.c \
+    toys/lsb/device/jiayu/s3_h560/scripts/mknod.c \
+    toys/lsb/device/jiayu/s3_h560/scripts/mktemp.c \
+    toys/lsb/device/jiayu/s3_h560/scripts/mount.c \
+    toys/lsb/device/jiayu/s3_h560/scripts/pidof.c \
+    toys/lsb/device/jiayu/s3_h560/scripts/seq.c \
+    toys/lsb/device/jiayu/s3_h560/scripts/sync.c \
+    toys/lsb/device/jiayu/s3_h560/scripts/umount.c \
+    toys/net/ifconfig.c \
+    toys/net/microcom.c \
+    toys/net/netcat.c \
+    toys/net/netstat.c \
+    toys/net/rfkill.c \
+    toys/net/tunctl.c \
+    toys/other/acpi.c \
+    toys/other/base64.c \
+    toys/other/blkid.c \
+    toys/other/blockdev.c \
+    toys/other/chcon.c \
+    toys/other/chroot.c \
+    toys/other/chrt.c \
+    toys/other/clear.c \
+    toys/other/dos2unix.c \
+    toys/other/fallocate.c \
+    toys/other/flock.c \
+    toys/other/free.c \
+    toys/other/freeramdisk.c \
+    toys/other/fsfreeze.c \
+    toys/other/help.c \
+    toys/other/hwclock.c \
+    toys/other/inotifyd.c \
+    toys/other/insmod.c \
+    toys/other/ionice.c \
+    toys/other/losetup.c \
+    toys/other/lsattr.c \
+    toys/other/lsmod.c \
+    toys/other/lspci.c \
+    toys/other/lsusb.c \
+    toys/other/makedevs.c \
+    toys/other/mkswap.c \
+    toys/other/modinfo.c \
+    toys/other/mountpoint.c \
+    toys/other/nbd_client.c \
+    toys/other/partprobe.c \
+    toys/other/pivot_root.c \
+    toys/other/pmap.c \
+    toys/other/printenv.c \
+    toys/other/pwdx.c \
+    toys/other/readlink.c \
+    toys/other/realpath.c \
+    toys/other/rev.c \
+    toys/other/rmmod.c \
+    toys/other/setsid.c \
+    toys/other/stat.c \
+    toys/other/swapoff.c \
+    toys/other/swapon.c \
+    toys/other/sysctl.c \
+    toys/other/tac.c \
+    toys/other/taskset.c \
+    toys/other/timeout.c \
+    toys/other/truncate.c \
+    toys/other/uptime.c \
+    toys/other/usleep.c \
+    toys/other/vconfig.c \
+    toys/other/vmstat.c \
+    toys/other/which.c \
+    toys/other/xxd.c \
+    toys/other/yes.c \
+    toys/pending/dd.c \
+    toys/pending/diff.c \
+    toys/pending/expr.c \
+    toys/pending/getfattr.c \
+    toys/pending/gzip.c \
+    toys/pending/lsof.c \
+    toys/pending/modprobe.c \
+    toys/pending/more.c \
+    toys/pending/setfattr.c \
+    toys/pending/tar.c \
+    toys/pending/tr.c \
+    toys/pending/traceroute.c \
+    toys/posix/basename.c \
+    toys/posix/cal.c \
+    toys/posix/cat.c \
+    toys/posix/chgrp.c \
+    toys/posix/chmod.c \
+    toys/posix/cksum.c \
+    toys/posix/cmp.c \
+    toys/posix/comm.c \
+    toys/posix/cp.c \
+    toys/posix/cpio.c \
+    toys/posix/cut.c \
+    toys/posix/date.c \
+    toys/posix/df.c \
+    toys/posix/dirname.c \
+    toys/posix/du.c \
+    toys/posix/echo.c \
+    toys/posix/env.c \
+    toys/posix/expand.c \
+    toys/posix/false.c \
+    toys/posix/file.c \
+    toys/posix/find.c \
+    toys/posix/grep.c \
+    toys/posix/head.c \
+    toys/posix/id.c \
+    toys/posix/kill.c \
+    toys/posix/ln.c \
+    toys/posix/ls.c \
+    toys/posix/mkdir.c \
+    toys/posix/mkfifo.c \
+    toys/posix/nice.c \
+    toys/posix/nl.c \
+    toys/posix/nohup.c \
+    toys/posix/od.c \
+    toys/posix/paste.c \
+    toys/posix/patch.c \
+    toys/posix/printf.c \
+    toys/posix/ps.c \
+    toys/posix/pwd.c \
+    toys/posix/renice.c \
+    toys/posix/rm.c \
+    toys/posix/rmdir.c \
+    toys/posix/sed.c \
+    toys/posix/sleep.c \
+    toys/posix/sort.c \
+    toys/posix/split.c \
+    toys/posix/strings.c \
+    toys/posix/tail.c \
+    toys/posix/tee.c \
+    toys/posix/time.c \
+    toys/posix/touch.c \
+    toys/posix/true.c \
+    toys/posix/tty.c \
+    toys/posix/ulimit.c \
+    toys/posix/uname.c \
+    toys/posix/uniq.c \
+    toys/posix/uudecode.c \
+    toys/posix/uuencode.c \
+    toys/posix/wc.c \
+    toys/posix/xargs.c \
+
+common_CFLAGS := \
+    -std=c99 \
+    -Os \
+    -Wno-char-subscripts \
+    -Wno-gnu-variable-sized-type-not-at-end \
+    -Wno-missing-field-initializers \
+    -Wno-sign-compare \
+    -Wno-string-plus-int \
+    -Wno-uninitialized \
+    -Wno-unused-parameter \
+    -funsigned-char \
+    -ffunction-sections -fdata-sections \
+    -fno-asynchronous-unwind-tables \
+
+toybox_upstream_version := $(shell sed 's/#define.*TOYBOX_VERSION.*"\(.*\)"/\1/p;d' $(LOCAL_PATH)/main.c)
+
+toybox_version := $(toybox_upstream_version)-android
+
+toybox_libraries := liblog libselinux libcutils libcrypto libz
+
+common_CFLAGS += -DTOYBOX_VERSION=\"$(toybox_version)\"
+
+# not usable on Android?: freeramdisk fsfreeze install makedevs nbd-client
+#                         partprobe pivot_root pwdx rev rfkill vconfig
+# currently prefer BSD system/core/toolbox: dd
+# currently prefer BSD external/netcat: nc netcat
+# currently prefer external/efs2progs: blkid chattr lsattr
+#
+
+ALL_RECOVERY_TOOLS := \
+    echo \
+    readlink \
+    sed \
+    tail \
+    tr \
+    dd \
+    grep
+
+############################################
+# static version to be installed in recovery
+############################################
+
+include $(CLEAR_VARS)
+LOCAL_MODULE := toybox_mt6752
+LOCAL_SRC_FILES := $(common_SRC_FILES)
+LOCAL_CFLAGS := $(common_CFLAGS)
+LOCAL_STATIC_LIBRARIES := $(toybox_libraries)
+# libc++_static is needed by static liblog
+LOCAL_CXX_STL := libc++_static
+LOCAL_MODULE_PATH := $(PRODUCT_OUT)/install/bin
+LOCAL_FORCE_STATIC_EXECUTABLE := true
+##LOCAL_POST_INSTALL_CMD := $(hide) $(foreach t,$(ALL_RECOVERY_TOOLS),ln -sf ${LOCAL_MODULE} $(LOCAL_MODULE_PATH)/$(t);)
+include $(BUILD_EXECUTABLE)
\ No newline at end of file
diff --git a/device/jiayu/s3_h560/patches_mtk/build/tools/releasetools/vendor.patch b/device/jiayu/s3_h560/patches_mtk/build/tools/releasetools/vendor.patch
new file mode 100644
index 0000000..d8812fa
--- /dev/null
+++ b/device/jiayu/s3_h560/patches_mtk/build/tools/releasetools/vendor.patch
@@ -0,0 +1,47 @@
+diff --git a/common.py b/common.py
+index 115d49b..d6329ae 100644
+--- a/common.py
++++ b/common.py
+@@ -1021,6 +1021,25 @@ def Cleanup():
+     else:
+       os.remove(i)
+
++
++def CreateVendorPartition(info):
++  info.script.AppendExtra('package_extract_file("install/bin/sgdisk_mt6752", "/tmp/sgdisk");');
++  info.script.AppendExtra('package_extract_file("install/bin/toybox_mt6752", "/tmp/toybox");');
++  info.script.AppendExtra('package_extract_file("install/bin/e2fsck_mt6752", "/tmp/e2fsck");');
++  info.script.AppendExtra('package_extract_file("install/bin/mke2fs_mt6752", "/tmp/mke2fs");');
++  info.script.AppendExtra('package_extract_file("install/bin/resize2fs_static", "/tmp/resize2fs");');
++  info.script.AppendExtra('package_extract_file("install/bin/vendor.sh", "/tmp/vendor.sh");');
++  info.script.AppendExtra('set_metadata("/tmp/sgdisk", "uid", 0, "gid", 0, "mode", 0755);');
++  info.script.AppendExtra('set_metadata("/tmp/toybox", "uid", 0, "gid", 0, "mode", 0755);');
++  info.script.AppendExtra('set_metadata("/tmp/e2fsck", "uid", 0, "gid", 0, "mode", 0755);');
++  info.script.AppendExtra('set_metadata("/tmp/mke2fs", "uid", 0, "gid", 0, "mode", 0755);');
++  info.script.AppendExtra('set_metadata("/tmp/resize2fs", "uid", 0, "gid", 0, "mode", 0755);');
++  info.script.AppendExtra('set_metadata("/tmp/vendor.sh", "uid", 0, "gid", 0, "mode", 0755);');
++  info.script.AppendExtra('ui_print("Checking for vendor partition...");');
++  info.script.AppendExtra('if run_program("/tmp/vendor.sh") != 0 then');
++  info.script.AppendExtra('abort("Create /vendor partition failed.");');
++  info.script.AppendExtra('endif;');
++
+
+ class PasswordManager(object):
+   def __init__(self):
+@@ -1298,6 +1298,7 @@ class DeviceSpecificParams(object):
+
+   def FullOTA_InstallBegin(self):
+     """Called at the start of full OTA installation."""
++    CreateVendorPartition(self)
+     return self._DoCall("FullOTA_InstallBegin")
+
+   def FullOTA_InstallEnd(self):
+@@ -1332,6 +1332,7 @@ class DeviceSpecificParams(object):
+   def IncrementalOTA_InstallBegin(self):
+     """Called at the start of incremental OTA installation (after
+     verification is complete)."""
++    CreateVendorPartition(self)
+     return self._DoCall("IncrementalOTA_InstallBegin")
+
+   def IncrementalOTA_InstallEnd(self):
+
\ No newline at end of file
diff --git a/device/jiayu/s3_h560/scripts/vendor.sh b/device/jiayu/s3_h560/scripts/vendor.sh
new file mode 100644
index 0000000..0f729ea
--- /dev/null
+++ b/device/jiayu/s3_h560/scripts/vendor.sh
@@ -0,0 +1,208 @@
+#!/sbin/sh
+#
+# Copyright (C) 2018 The LineageOS Project
+#
+# Licensed under the Apache License, Version 2.0 (the "License");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#      http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+#
+# /sbin/sh runs out of TWRP.. use it.
+#
+# Needed programs, check for each one
+# Check first for /tmp static copy
+# Fall back to TWRP installed copies
+#
+PROGS="sgdisk toybox resize2fs e2fsck mke2fs"
+ABORT=0
+#
+# Find sgdisk
+if [ -x "/tmp/sgdisk" ] ; then
+   SGDISK="/tmp/sgdisk"
+elif [ -x "/sbin/sgdisk" ] ; then
+   SGDISK="/sbin/sgdisk"
+else
+   echo "Missing sgdisk"
+   ABORT=1
+fi
+#
+# Find toybox or busybox
+if [ -x "/tmp/toybox" ] ; then
+   BOX="/tmp/toybox"
+elif [ -x "/sbin/busybox" ] ; then
+   BOX="/sbin/busybox"
+else
+   echo "Missing toybox or busybox"
+   ABORT=1
+fi
+#
+# Find resize2fs
+if [ -x "/tmp/resize2fs" ] ; then
+   RESIZEFS="/tmp/resize2fs"
+elif [ -x "/sbin/resize2fs" ] ; then
+   RESIZEFS="/sbin/resize2fs"
+else
+   echo "Missing resize2fs"
+   ABORT=1
+fi
+#
+# Find e2fsck
+if [ -x "/tmp/e2fsck" ] ; then
+   FSCK="/tmp/e2fsck"
+elif [ -x "/sbin/e2fsck" ] ; then
+   FSCK="/sbin/e2fsck"
+else
+   echo "Missing e2fsck"
+   ABORT=1
+fi
+#
+# Find mke2fs
+if [ -x "/tmp/mke2fs" ] ; then
+   MKFS="/tmp/mke2fs"
+elif [ -x "/sbin/mke2fs" ] ; then
+   MKFS="/sbin/mke2fs"
+else
+   echo "Missing mke2fs"
+   ABORT=1
+fi
+#
+if [ "${ABORT}" = "1" ] ; then
+   echo "Aborting.."
+   exit 7
+fi
+#
+# Get /dev/block/mmcblk0
+DISK=`${BOX} echo /dev/block/mmcblk0`
+echo "${DISK}"
+#
+# Check for /vendor existence
+VENDOR=`${SGDISK} --pretend --print ${DISK} | ${BOX} grep -c vendor`
+#
+if [ ${VENDOR} -ge 1 ] ; then
+   # If vendor does not have a ext4 filesystem, mke2fs it then
+   if [ `${BOX} blkid /dev/block/platform/mtk-msdc.0/11230000.MSDC0/by-name/vendor | ${BOX} egrep -c ext4` -eq 0 ] ; then
+      ${MKFS} -t ext4 /dev/block/platform/mtk-msdc.0/11230000.MSDC0/by-name/vendor
+   fi
+# Got it, we're done...
+   exit 0
+fi
+#
+# Save area.
+if [ -d /external_sd/Android ] ; then
+   SAVEDIR=/external_sd
+fi
+if [ -d /data/device/jiayu/s3_h560/scripts/local/tmp ] ; then
+   SAVEDIR=/data/device/jiayu/s3_h560/scripts/local/tmp
+fi
+if [ -d /data/device/jiayu/s3_h560/scripts/media/device/jiayu/s3_h560/scripts/0 ] ; then
+   SAVEDIR=/data/device/jiayu/s3_h560/scripts/media/device/jiayu/s3_h560/scripts/0
+fi
+#
+# Save a backup of gpt
+${SGDISK} --pretend --backup=${SAVEDIR}/pre-vendor-gpt.bin ${DISK}
+#
+# Missing... need to create it..
+echo "/vendor missing"
+#
+# Get next partition...
+LAST=`${SGDISK} --pretend --print ${DISK} | ${BOX} tail -1 | ${BOX} tr -s ' ' | ${BOX} cut -d' ' -f2`
+NEXT=`${BOX} expr ${LAST} + 1`
+NUMPARTS=`${SGDISK} --pretend --print ${DISK} | ${BOX} grep 'holds up to' | ${BOX} tr -s ' ' | ${BOX} cut -d' ' -f6`
+#
+# Check if we need to expand the partition table
+RESIZETABLE=""
+if [ ${NEXT} -gt ${NUMPARTS} ] ; then
+   RESIZETABLE=" --resize-table=${NEXT}"
+fi
+#
+# Get /system partition #, start, ending, code
+SYSPARTNUM=`${SGDISK} --pretend --print ${DISK} | ${BOX} grep system | ${BOX} tr -s ' ' | ${BOX} cut -d' ' -f2`
+SYSSTART=`${SGDISK} --pretend --print ${DISK} | ${BOX} grep system | ${BOX} tr -s ' ' | ${BOX} cut -d' ' -f3`
+SYSEND=`${SGDISK} --pretend --print ${DISK} | ${BOX} grep system | ${BOX} tr -s ' ' | ${BOX} cut -d' ' -f4`
+SYSCODE=`${SGDISK} --pretend --print ${DISK} | ${BOX} grep system | ${BOX} tr -s ' ' | ${BOX} cut -d' ' -f7`
+#
+# Get sector size
+SECSIZE=`${SGDISK} --pretend --print ${DISK} | ${BOX} grep 'sector size' | ${BOX} tr -s ' ' | ${BOX} cut -d' ' -f4`
+#
+# Sanity check
+if [ "${SYSPARTNUM}" = "" -o "${SYSSTART}" = "" -o "${SYSEND}" = "" -o "${SYSCODE}" = "" -o "${SECSIZE}" = "" ] ; then
+   ${BOX} echo "Failure:"
+   ${BOX} echo "SYSPARTNUM=${SYSPARTNUM}"
+   ${BOX} echo "SYSSTART=${SYSSTART}"
+   ${BOX} echo "SYSEND=${SYSEND}"
+   ${BOX} echo "SYSCODE=${SYSCODE}"
+   ${BOX} echo "SECSIZE=${SECSIZE}"
+   exit 9
+fi
+#
+# 512 = 512mb
+VENDORSIZE=`${BOX} expr 512 \* 1024 \* 1024 / ${SECSIZE}`
+NEWEND=`${BOX} expr ${SYSEND} - ${VENDORSIZE}`
+VENDORSTART=`${BOX} expr ${NEWEND} + 1`
+NEWSYSSIZE=`${BOX} expr ${NEWEND} - ${SYSSTART} + 1`
+MINSYSSIZE=`${RESIZEFS} -P /dev/block/platform/mtk-msdc.0/11230000.MSDC0/by-name/system 2>/dev/null | ${BOX} grep minimum | ${BOX} tr -s ' ' | ${BOX} cut -d' ' -f7`
+#
+# Check if /system will shrink to small
+if [ ${NEWSYSSIZE} -le 0 ] ; then
+   ${BOX} echo "ERROR: /system will be 0."
+   exit 9
+fi
+if [ ${NEWSYSSIZE} -lt ${MINSYSSIZE} ] ; then
+   ${BOX} echo "ERROR: /system will be smaller than the minimum allowed."
+   ${BOX} echo "NEWSYSSIZE=${NEWSYSSIZE}"
+   ${BOX} echo "      -lt"
+   ${BOX} echo "MINSYSSIZE=${MINSYSSIZE}"
+   exit 9
+fi
+#
+# Sanity checks
+if [ "${NEWSYSSIZE}" = "" -o "${NEWEND}" = "" -o "${NEWSYSSIZE}" = "" ] ; then
+   ${BOX} echo "Failure:"
+   ${BOX} echo "NEWSYSSIZE=${NEWSYSSIZE}"
+   ${BOX} echo "NEWEND=${NEWEND}"
+   ${BOX} echo "NEWSYSSIZE=${NEWSYSSIZE}"
+   exit 9
+fi
+#
+# Resize /system, this will delete the data.
+${BOX} echo "*********Resize /system to ${NEWSYSSIZE} = ${NEWEND} - ${SYSSTART} + 1 (inclusize) = ${NEWSYSSIZE}"
+#
+${FSCK} -y -f /dev/block/platform/mtk-msdc.0/11230000.MSDC0/by-name/system
+${RESIZEFS} /dev/block/platform/mtk-msdc.0/11230000.MSDC0/by-name/system ${NEWSYSSIZE}
+#
+${BOX} echo ${SGDISK} ${RESIZETABLE} --delete=${SYSPARTNUM} --new=${SYSPARTNUM}:${SYSSTART}:${NEWEND} --change-name=${SYSPARTNUM}:system --new=${NEXT}:${VENDORSTART}:${SYSEND} --change-name=${NEXT}:vendor --print ${DISK}
+#
+${SGDISK} ${RESIZETABLE} --delete=${SYSPARTNUM} --new=${SYSPARTNUM}:${SYSSTART}:${NEWEND} --change-name=${SYSPARTNUM}:system --new=${NEXT}:${VENDORSTART}:${SYSEND} --change-name=${NEXT}:vendor --print ${DISK} > /tmp/sg.out 2>&1
+#
+# Sort partition
+${SGDISK} --sort ${DISK}
+#
+# Format /system and /vendor
+${MKFS} -t ext4 /dev/block/platform/mtk-msdc.0/11230000.MSDC0/by-name/system
+${MKFS} -t ext4 /dev/block/platform/mtk-msdc.0/11230000.MSDC0/by-name/vendor
+#
+${BOX} cat /tmp/sg.out
+#
+# Save a copy of how to undo this
+${BOX} echo "To revert /vendor back: " > ${SAVEDIR}/vendor.recover.txt
+${BOX} echo "**Wipe ext4 file system: " >> ${SAVEDIR}/vendor.recover.txt
+${BOX} echo "dd if=/dev/zero of=/dev/block/platform/mtk-msdc.0/11230000.MSDC0/by-name/vendor bs=512 count=32 conv=notrunc" >> ${SAVEDIR}/vendor.recover.txt
+${BOX} echo "** Recover parition table: " >> ${SAVEDIR}/vendor.recover.txt
+${BOX} echo "sgdisk --delete=${SYSPARTNUM} --delete=${NEXT} --new=${SYSPARTNUM}:${SYSSTART}:${SYSEND} --change-name=${SYSPARTNUM}:system --print ${DISK}" >> ${SAVEDIR}/vendor.recover.txt
+${BOX} echo "**reboot recovery**, then resize2fs /system back to normal size:" >> ${SAVEDIR}/vendor.recover.txt
+${BOX} echo "resize2fs /dev/block/platform/mtk-msdc.0/11230000.MSDC0/by-name/system" >> ${SAVEDIR}/vendor.recover.txt
+#
+${BOX} cat ${SAVEDIR}/vendor.recover.txt
+#
+ui_print("Successfully completed.");
+ui_print("Now reboot to recovery.");
+#
+sleep 5
+reboot recovery
\ No newline at end of file
diff --git a/device/jiayu/s3_h560/product/vendor.mk b/device/jiayu/s3_h560/product/vendor.mk
new file mode 100644
index 0000000..4fc9f39
--- /dev/null
+++ b/device/jiayu/s3_h560/product/vendor.mk
@@ -0,0 +1,11 @@
+# /vendor
+PRODUCT_PACKAGES += \
+   resize2fs_static \
+   toybox_mt6752 \
+   mke2fs_mt6752 \
+   e2fsck_mt6752 \
+   sgdisk_mt6752
+
+# Creating /vendor
+PRODUCT_COPY_FILES += \
+    $(LOCAL_PATH)/scripts/vendor.sh:install/bin/vendor.sh
\ No newline at end of file
